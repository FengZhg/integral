syntax = "proto3";
package server.integral;

option go_package = "./server";

// appid + type 可以唯一标识一种积分
// oid          可以唯一标识一个订单

service integral {
	// 积分查询
	rpc Query(QueryReq) returns (QueryRsp) {}
	// 积分修改
	rpc Modify(ModifyReq) returns (ModifyRsp) {}
	// 积分修改回滚
	rpc Rollback(RollbackReq) returns (RollbackRsp) {}
	// 订单流水查询
	rpc QueryFlow(QueryFlowReq) returns (QueryFlowRsp) {}
}

message QueryReq {
	repeated string uids  = 1; // 用户id们
	string          appid = 2; // 应用id
	string          type  = 3; // 类型
}

message QueryRsp {
	repeated SingleQueryRsp usersRsp = 1; // 查询的返回结果
}

message SingleQueryRsp {
	string uid      = 1; // 用户id
	string appid    = 2; // 积分id
	string type     = 3; // 积分类型
	int64  integral = 4; // 积分余额
}

message ModifyReq {
	string uid      = 1; // 用户id
	string appid    = 2; // 积分id
	string type     = 3; // 积分类型
	int32  opt      = 4; // 操作类型 1：增加余额  2：扣除余额
	string oid      = 5; // 订单id 唯一标识一个订单
	int64  integral = 6; // 需要操作的余额数量
}

message ModifyRsp {
	int64 integral = 1; // 积分余额，如果在请求时将qtype置为1，此处将有返回，否则无
}

message RollbackReq {
	string uid   = 1; // 用户id
	string appid = 2; // 积分id
	string type  = 3; // 积分类型
	string oid   = 4; // 订单id
}

message RollbackRsp {}

message QueryFlowReq {
	string uid    = 1; // 用户id
	string appid  = 2; // 积分id
	string type   = 3; // 积分类型
	int32  num    = 4; // 请求的流水条数
	int32  offset = 5; // 流水偏移量
}

message QueryFlowRsp {
	repeated SingleFlow flows = 1; // 流水信息
}

message SingleFlow {
	string uid       = 1; // 用户id
	string appid     = 2; // 积分id
	string type      = 3; // 积分类型
	uint32 opt       = 4; // 操作类型 1：增加余额  2：扣除余额
	string oid       = 5; // 订单id 唯一标识一个订单
	uint64 integral  = 6; // 操作的余额数量
	uint64 timestamp = 7; // 操作时间戳
	string time      = 8; // 操作时间
	bool   rollback  = 10;// 回滚标志
}